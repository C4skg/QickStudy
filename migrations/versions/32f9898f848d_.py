"""empty message

Revision ID: 32f9898f848d
Revises: 
Create Date: 2024-01-21 15:34:00.638427

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '32f9898f848d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Qc_Users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('delFlag', sa.Boolean(), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('logo', mysql.LONGTEXT(), nullable=True),
    sa.Column('sinceTime', sa.DateTime(), nullable=True),
    sa.Column('resetTime', sa.DateTime(), nullable=True),
    sa.Column('permission', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_general_ci'
    )
    op.create_index(op.f('ix_Qc_Users_confirmed'), 'Qc_Users', ['confirmed'], unique=False)
    op.create_index(op.f('ix_Qc_Users_email'), 'Qc_Users', ['email'], unique=True)
    op.create_index(op.f('ix_Qc_Users_permission'), 'Qc_Users', ['permission'], unique=False)
    op.create_index(op.f('ix_Qc_Users_username'), 'Qc_Users', ['username'], unique=True)
    op.create_table('Qc_art_Types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('typeName', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Qc_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('finger', sa.Text(), nullable=True),
    sa.Column('path', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_general_ci'
    )
    op.create_table('Qc_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('eventId', sa.Integer(), nullable=False),
    sa.Column('desc', sa.String(length=1000), nullable=False),
    sa.Column('nums', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Qc_logs_eventId'), 'Qc_logs', ['eventId'], unique=False)
    op.create_index(op.f('ix_Qc_logs_nums'), 'Qc_logs', ['nums'], unique=False)
    op.create_table('Qc_UserAttend',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('attendDate', sa.DateTime(), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['Qc_Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Qc_UserInfo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Qc_Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Qc_articles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('context', mysql.LONGTEXT(), nullable=False),
    sa.Column('lastTime', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('cover', sa.Text(), nullable=True),
    sa.Column('typeId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['Qc_Users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_general_ci'
    )
    op.create_index(op.f('ix_Qc_articles_status'), 'Qc_articles', ['status'], unique=False)
    op.create_table('follows',
    sa.Column('followerId', sa.Integer(), nullable=False),
    sa.Column('followTarget', sa.Integer(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['followTarget'], ['Qc_Users.id'], ),
    sa.ForeignKeyConstraint(['followerId'], ['Qc_Users.id'], ),
    sa.PrimaryKeyConstraint('followerId', 'followTarget')
    )
    op.create_table('Qc_art_Agree',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('articleId', sa.Integer(), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['articleId'], ['Qc_articles.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['Qc_Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Qc_comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('articleId', sa.Integer(), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('context', sa.String(length=1000), nullable=True),
    sa.Column('parentId', sa.Integer(), nullable=True),
    sa.Column('replyId', sa.Integer(), nullable=True),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['articleId'], ['Qc_articles.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['Qc_Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Qc_comment_parentId'), 'Qc_comment', ['parentId'], unique=False)
    op.create_index(op.f('ix_Qc_comment_replyId'), 'Qc_comment', ['replyId'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_Qc_comment_replyId'), table_name='Qc_comment')
    op.drop_index(op.f('ix_Qc_comment_parentId'), table_name='Qc_comment')
    op.drop_table('Qc_comment')
    op.drop_table('Qc_art_Agree')
    op.drop_table('follows')
    op.drop_index(op.f('ix_Qc_articles_status'), table_name='Qc_articles')
    op.drop_table('Qc_articles')
    op.drop_table('Qc_UserInfo')
    op.drop_table('Qc_UserAttend')
    op.drop_index(op.f('ix_Qc_logs_nums'), table_name='Qc_logs')
    op.drop_index(op.f('ix_Qc_logs_eventId'), table_name='Qc_logs')
    op.drop_table('Qc_logs')
    op.drop_table('Qc_images')
    op.drop_table('Qc_art_Types')
    op.drop_index(op.f('ix_Qc_Users_username'), table_name='Qc_Users')
    op.drop_index(op.f('ix_Qc_Users_permission'), table_name='Qc_Users')
    op.drop_index(op.f('ix_Qc_Users_email'), table_name='Qc_Users')
    op.drop_index(op.f('ix_Qc_Users_confirmed'), table_name='Qc_Users')
    op.drop_table('Qc_Users')
    # ### end Alembic commands ###
